#!/usr/bin/python3

import matplotlib.pyplot as plt

node_comp_timeouts = [[False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, True, False, False], [False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, True, False, False], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, True, False, False, False, False, False, False]]
times = [[0.7107, 0.4886, 0.1018, 0.2592, 0.1831, 1.6996, 0.0804, 0.554, 0.229, 0.7461, 0.3426, 0.5903, 0.1014, 0.8121, 0.0989, 2.0966, 1.9955, 1.8705, 0.0359, 0.6945, 0.0268, 1.9697, 0.0961, 0.2523, 0.0381, 0.2311, 0.1281, 0.2976, 0.0299, 0.0719, 0.6501, 0.7949, 0.1656, 0.2, 0.3792, 1.5355, 3.8457, 7.798, 0.1156, 0.2778], [0.7096, 0.4189, 0.078, 0.2509, 0.183, 2.0488, 0.0633, 0.2252, 0.2297, 0.7526, 0.3414, 0.5814, 0.0711, 0.823, 0.0689, 2.1384, 1.9974, 1.8724, 0.0732, 0.4239, 0.0221, 1.8089, 0.0824, 0.2512, 0.031, 0.2278, 0.107, 0.2972, 0.0253, 0.0675, 0.6447, 0.0886, 0.3206, 0.1183, 0.3629, 1.2964, 4.8076, 8.0077, 0.0941, 0.2765], [0.7832, 0.739, 0.091, 0.3219, 0.1831, 1.6227, 0.0547, 0.2664, 0.2369, 0.8946, 0.3765, 0.7298, 0.0793, 0.898, 0.0774, 2.0718, 1.2403, 0.0444, 0.4786, 5.3723, 3.4044, 0.9895, 0.084, 0.3232, 0.0369, 0.2503, 0.1193, 0.3577, 0.031, 0.0867, 0.7977, 0.8603, -1, 1.7501, 0.0528, 0.2687, 0.072, -1, 0.1068, 0.3716], [0.7832, 0.7385, 0.0909, 0.3216, 0.1903, 1.6232, -1, 0.266, 0.2365, 0.9004, 0.3862, 0.7352, 0.0901, 0.8891, 0.0858, 2.0667, 1.2317, 0.0443, 0.4553, 5.3415, 6.7925, 0.9876, 0.0839, 0.3242, 0.039, 0.2466, 0.1194, 0.3634, 0.0305, 0.0864, 0.8622, 0.8588, -1, 1.7549, 0.0533, 0.2686, 0.0934, -1, 0.1069, 0.373], [0.7806, 0.7366, 0.0908, 0.3194, 0.1881, 1.5654, 0.0517, 0.2538, 0.2371, 0.8957, 0.3803, 0.7347, 0.0777, 0.8481, 0.0768, 1.9474, 1.1935, 0.0422, 0.462, 5.1158, 3.3393, 0.9561, 0.0836, 0.323, 0.0358, 0.2311, 0.1202, 0.3566, 0.0306, 0.0852, 0.7819, 0.817, -1, 1.6866, 0.0531, 0.2675, 0.0708, 9.1907, 0.1063, 0.3719], [0.7816, 0.5903, 0.0917, 0.3162, 0.1879, 1.6913, 0.0573, 0.4499, 0.2398, 0.8707, 0.3806, 0.7301, 0.0798, 0.8763, 0.0771, 2.2983, 1.2489, 1.2327, 0.0457, 2.3681, 0.0118, 0.1093, 0.0837, 0.3182, 0.0374, 0.2547, 0.1201, 0.35, 0.0307, 0.0848, 0.7927, 0.8836, -1, 0.5819, 0.053, 1.6194, 0.072, 0.3544, 0.1073, 0.3708], [0.7836, 0.5915, 0.0942, 0.3164, 0.1955, 1.6988, 0.0682, 0.4497, 0.2382, 0.8712, 0.3812, 0.7286, 0.0906, 0.8873, 0.0861, 2.3036, 1.2508, 1.2369, 0.3041, 2.4004, 0.0125, 0.1077, 0.0848, 0.3184, 0.039, 0.2557, 0.1199, 0.3505, 0.0306, 0.0868, 0.8668, 0.8841, 1.5466, 0.586, 0.0531, 1.6131, 0.0932, 0.3547, 0.1066, 0.372], [0.7834, 0.5923, 0.0917, 0.3191, 0.1851, 1.7276, 0.057, 0.4557, 0.2372, 0.8689, 0.3813, 0.7272, 0.0826, 0.8726, 0.0771, 2.284, 1.2734, 1.2391, 0.2438, 2.4188, 0.0118, 0.1083, 0.0837, 0.324, 0.036, 0.2518, 0.1193, 0.3506, 0.0307, 0.0857, 0.7863, 0.8865, -1, 0.592, 0.0534, 1.6218, 0.0718, 0.3539, 0.107, 0.3735], [0.787, 0.495, 0.092, 0.3172, 0.1887, 2.0587, 0.0486, 0.2286, 0.2381, 0.8667, 0.4188, 0.817, 0.0797, 0.9032, 0.0774, 2.3546, 1.2716, 1.2522, 0.0534, 2.4448, 0.0118, 1.0005, 0.1046, 0.3624, 0.037, 0.2611, 0.1375, 0.429, 0.0306, 0.085, 0.7888, 0.102, -1, 0.3562, 0.0533, 1.3602, 1.4687, 0.4535, 0.1247, 0.3954], [0.7866, 0.4949, 0.0916, 0.3184, 0.192, 2.0616, 0.0534, 0.2237, 0.2387, 0.8787, 0.4198, 0.8041, 0.0881, 0.9049, 0.0867, 2.3564, 1.2717, 1.2588, 0.3073, 2.4595, 0.0125, 1.0045, 0.1039, 0.3497, 0.039, 0.2616, 0.1374, 0.4278, 0.0307, 0.0853, 0.8628, 0.1015, 0.9351, 0.3582, 0.0531, 1.3571, 1.5745, 0.454, 0.1245, 0.3954], [0.7807, 0.4977, 0.0912, 0.3245, 0.1876, 2.0868, 0.048, 0.2173, 0.2379, 0.8707, 0.4232, 0.8243, 0.079, 0.8892, 0.0771, 2.3313, 1.2668, 1.2852, 0.2476, 2.4572, 0.0118, 1.0244, 0.1047, 0.3509, 0.0362, 0.2576, 0.1378, 0.4266, 0.0306, 0.0856, 0.7842, 0.1008, -1, 0.3593, 0.0533, 1.366, 1.4622, 0.4526, 0.1245, 0.3973], [5.462, 2.4445, 0.078, 0.2509, 0.1829, 1.6279, 0.1944, 0.3233, 0.2282, 0.7438, 0.3455, 0.6066, 0.0704, 0.7518, 0.0685, 1.9244, 2.4259, 2.5465, 0.3349, 5.0096, 6.7292, 1.9218, 0.0793, 0.25, 0.0307, 0.2016, 0.1032, 0.296, 0.0252, 0.0667, 0.6155, 0.7308, -1, -1, 0.3626, 0.5696, 3.795, 5.9471, 0.0941, 0.2746]]

labels = ['NTA', 'WNTA', 'TM1', 'TM2', 'TM3', 'NTA+TM1','NTA+TM2','NTA+TM3','WNTA+TM1','WNTA+TM2','WNTA+TM3','No heuristic']

prune_comp_timeouts = [[False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], [False, True, False, True, False, False, False, False, False, False, False, True, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, True, False, True, False, True, False, False, True, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, True, False, False, False, False, False, False, False, False, False, False, False, False], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, False, False, False, False, True, True, True, True], [False, False, False, False, False, False, False, False, True, True, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, True, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], [False, True, False, True, False, True, False, True, True, True, False, True, True, True, False, True, False, True, False, True, False, True, True, True, True, True, False, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True], [], [], [], [], []]

prune_comp_times = [[0.7841, 0.1129, 0.5968, 1.5264, 0.1189, 0.1159, 0.3308, 0.3366, 0.1904, 0.0, 1.8328, 0.8371, 0.0788, 0.0003, 0.4525, 1.7625, 0.2409, 0.0747, 0.8461, 0.4642, 0.4212, 0.399, 0.5987, 0.7876, 0.1166, 0.1138, 0.8922, 0.4727, 0.1164, 0.1132, 2.3153, 1.62, 1.2724, 3.3248, 1.2497, 3.0774, 0.0051, -1, 2.7442, 1.666, 0.0292, 2.6589, 1.015, 1.8816, 0.1189, 0.0397, 0.2255, 0.35, 0.0474, 0.0104, 0.2654, 0.1341, 0.1584, 0.0684, 0.3231, 0.2918, 0.0353, 0.0332, 0.091, 0.0893, 0.8699, 0.8133, 0.8868, 0.8853, 1.5655, 2.0284, 0.5889, 0.1905, 0.0493, 0.0942, 1.6432, 0.4174, 1.545, 2.6794, 0.3579, 3.1356, 0.1439, 0.1174, 0.296, 0.3903], [0.7781, 0.1111, 0.5976, 1.5134, 0.0939, 0.0897, 0.3192, 0.3243, 0.1912, 0.0, 1.7945, 0.8279, 0.0772, 0.0002, 0.4486, 1.7181, 0.2418, 0.0584, 0.8433, 0.4472, 0.4204, 0.399, 0.5968, 0.7856, 0.0861, 0.0835, 0.8922, 0.4612, 0.0859, 0.083, 2.3142, 1.6061, 1.2536, 3.2949, 1.24, 3.0617, 0.0047, -1, 2.7239, 1.647, 0.0241, 2.6555, 1.0128, 1.8595, 0.1024, 0.0394, 0.2174, 0.3484, 0.0395, 0.0102, 0.2566, 0.1304, 0.1362, 0.0677, 0.3203, 0.2905, 0.0306, 0.0289, 0.0857, 0.0853, 0.8529, 0.8078, 0.8815, 0.877, 1.5352, 2.0034, 0.5817, 0.1897, 0.0403, 0.1431, 2.6084, 0.6435, 3.0199, 3.9161, 0.3549, 3.9903, 0.1224, 0.1177, 0.291, 0.3901], [0.7799, -1, 0.5985, -1, 0.0939, 0.0903, 0.3202, 0.3305, 0.1911, 0.0, 2.985, -1, 0.077, 0.0002, 0.4798, -1, 0.241, 0.0594, 0.8449, 0.4552, 0.4207, 0.399, 0.5953, 0.7878, 0.086, 0.0835, 0.8867, 0.4616, 0.0858, 0.0828, 2.3339, 6.5727, 1.2464, -1, 1.2411, -1, 0.0592, -1, 5.576, -1, 0.024, 2.6494, -1, -1, 0.1017, 0.0394, 0.217, 0.3483, 0.0394, 0.0102, 0.2561, 0.1298, 0.136, 0.068, 0.32, 0.2884, 0.0305, 0.0283, 0.086, 0.0853, 0.8526, 0.8075, 0.8804, 0.8798, 2.2515, -1, 1.0847, -1, 0.0401, 0.0895, 1.6358, 0.4106, 1.5065, 2.653, 0.3552, 4.4667, 0.1226, 0.1168, 0.2908, 0.3896], [0.7705, 0.1113, 0.5889, 1.4988, 0.6325, 0.625, 0.4691, 0.4926, 0.2436, 0.0, 1.8965, 0.8695, 0.1072, 0.0003, 0.4476, 1.8433, 0.5141, 0.4039, 1.2272, 0.8141, 0.4649, 0.4438, 0.5862, 0.8254, 0.5628, 0.5599, 0.9867, 0.638, 0.5627, 0.5568, 2.48, 1.8868, 1.7703, 4.5059, 1.3269, 3.2984, 0.0062, -1, 2.9619, 1.7735, 0.068, 5.3854, 1.0487, 1.9269, 0.107, 0.0466, 0.2166, 0.3416, 0.0419, 0.0107, 0.2571, 0.1311, 0.1856, 0.1808, 0.3766, 0.3432, 0.0343, 0.0319, 0.0848, 0.0858, 0.8452, 0.815, 0.8735, 0.8738, 1.7039, 2.1223, 0.5798, 0.1907, 0.0411, 0.1016, 1.6927, 0.4195, 1.6467, 2.9515, 0.3595, 3.1329, 0.2523, 0.255, 0.3452, 0.524], [0.655, 0.0977, 0.4544, 1.4033, 0.0992, 0.096, 0.2267, 0.2308, 0.191, 0.0, 1.7697, 0.7956, 0.0665, 0.0002, 0.3772, 1.6318, 0.2193, 0.0613, 0.6267, 0.326, 0.5016, -1, 0.5015, -1, 0.0976, 0.0948, 0.7706, 0.4044, 0.0973, 0.0942, 1.9843, 1.3844, 1.0661, 3.01, 1.0328, 2.7514, 0.0045, -1, 2.3948, 1.5239, 0.0258, 2.5369, 0.9411, 1.7154, 0.1013, 1.9441, 0.1657, 3.4309, 0.9769, 0.9951, 4.2552, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0.4947, -1, -1, -1, -1, 1.3859, 2.3893, 0.5154, 3.2044, -1, -1, -1, -1], [0.3594, 0.0785, 0.4027, 1.1542, 0.0912, 0.0868, 0.2986, 0.3011, -1, -1, 1.3975, 0.6507, 0.0662, -1, 0.3599, 1.3915, 0.0968, 0.0566, 0.662, 0.4215, 0.2371, 0.2346, 0.3971, 0.5968, 0.0824, 0.0798, 0.5342, 0.3234, 0.0821, 0.0795, 1.4541, 1.1236, 1.0521, 2.4812, 1.0134, 2.1946, 0.013, -1, 2.1505, 1.307, -1, -1, 0.8123, 1.4878, 0.0978, 0.0371, 0.2018, 0.328, 0.0322, 0.0175, 0.1884, 0.0915, 0.1341, 0.0678, 0.3026, 0.2724, 0.029, 0.029, 0.0791, 0.0804, 0.6801, 0.6334, 0.6539, 0.6379, 1.3181, 2.4632, 0.5071, 0.1543, 0.0389, 0.0892, 1.532, 0.3874, 1.2887, 2.1933, 0.2526, 2.1533, 0.1207, 0.1243, 0.2733, 0.3762], [0.2179, -1, 0.2504, -1, 0.1247, -1, 0.2202, -1, -1, -1, 2.2067, -1, -1, -1, 0.2968, -1, 0.1011, -1, 0.4932, -1, 0.2139, -1, -1, -1, -1, -1, 0.4305, -1, -1, -1, 9.6697, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9.807, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0.7065, -1, -1, -1, -1, -1], [], [], [], [], []]

# subplots
nums1 = []
nums2 = []
nums3 = []
nums4 = []


for heurIdx in range(12):
	nums1.append(round(times[heurIdx][18] if times[heurIdx][18] > 0 else 20, 3))
	nums2.append(round(times[heurIdx][21] if times[heurIdx][21] > 0 else 20, 3))
	nums3.append(round(times[heurIdx][22] if times[heurIdx][22] > 0 else 20, 3))
	nums4.append(round(times[heurIdx][32] if times[heurIdx][32] > 0 else 20, 3))

labels = ['NTA', 'WNTA', 'TM1', 'TM2', 'TM3', 'NTA+TM1','NTA+TM2','NTA+TM3','WNTA+TM1','WNTA+TM2','WNTA+TM3','None']
fig, axs = plt.subplots(4)

#fig = plt.figure(figsize = (10, 5))

# creating the bar plot
q0 = axs[0].bar(labels, nums1, width = 0.4)
q1 = axs[1].bar(labels, nums2, width = 0.4)
q2 = axs[2].bar(labels, nums3, width = 0.4)
q3 = axs[3].bar(labels, nums4, width = 0.4)
axs[0].label_outer()
axs[1].label_outer()
axs[2].label_outer()

axs[0].set_title('Test 19 - Grammar 10')
axs[1].set_title('Test 22 - Grammar 11')
axs[2].set_title('Test 23 - Grammar 12')
axs[3].set_title('Test 33 - Grammar 17')

axs[2].set(ylabel='time (sec)')
#plt.sety_label('time (sec)')


#axs[0].bar_label(q0)
#axs[1].bar_label(q1)
#axs[2].bar_label(q2)
#axs[3].bar_label(q3)
#axs[0].set_title('My Title', fontdict={'fontsize': 8, 'fontweight': 'medium'})

plt.show()

#totals = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#tos =    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
##labels = ['ALL', 'SL OFF', 'TL OFF', 'WS OFF', 'RL OFF', 'RE OFF', 'NONE']

#for pIdx in range(12):
	#for tIdx in range(40):
		#if node_comp_timeouts[pIdx][tIdx]:
			#tos[pIdx] += 1
			#totals[pIdx] += 20
		#else:
			#totals[pIdx] += node_comp_times[pIdx][tIdx]

#for i, v in enumerate(totals):
	#totals[i] = round(v, 2)

#print(totals)
#print(tos)

#q = plt.bar(labels, totals)
#plt.bar_label(q)
##plt.ylabel("time (sec)")
##plt.bar([1,2,3,4,5,6,7], totals)
#plt.show()
